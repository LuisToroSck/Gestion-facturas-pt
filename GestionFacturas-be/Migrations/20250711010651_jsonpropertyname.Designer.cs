// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionFacturas_be.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250711010651_jsonpropertyname")]
    partial class jsonpropertyname
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Invoice", b =>
                {
                    b.Property<int>("InvoiceNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DaysToDue")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "days_to_due");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "invoice_date");

                    b.Property<string>("InvoiceStatus")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "invoice_status");

                    b.Property<DateTime>("PaymentDueDate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "payment_due_date");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "payment_status");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "total_amount");

                    b.HasKey("InvoiceNumber");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Invoice", b =>
                {
                    b.OwnsMany("InvoiceCreditNote", "InvoiceCreditNote", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<decimal?>("CreditNoteAmount")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("CreditNoteDate")
                                .HasColumnType("TEXT");

                            b1.Property<int?>("CreditNoteNumber")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("InvoiceId")
                                .HasColumnType("INTEGER");

                            b1.HasKey("Id");

                            b1.HasIndex("InvoiceId");

                            b1.ToTable("InvoiceCreditNote");

                            b1.HasAnnotation("Relational:JsonPropertyName", "invoice_credit_note");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.OwnsMany("InvoiceDetail", "InvoiceDetail", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<int>("InvoiceId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("ProductName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<int>("Quantity")
                                .HasColumnType("INTEGER");

                            b1.Property<decimal>("Subtotal")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("UnitPrice")
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("InvoiceId");

                            b1.ToTable("InvoiceDetail");

                            b1.HasAnnotation("Relational:JsonPropertyName", "invoice_detail");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.OwnsOne("Customer", "Customer", b1 =>
                        {
                            b1.Property<int>("InvoiceNumber")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("CustomerEmail")
                                .HasColumnType("TEXT");

                            b1.Property<string>("CustomerName")
                                .HasColumnType("TEXT");

                            b1.Property<string>("CustomerRun")
                                .HasColumnType("TEXT");

                            b1.HasKey("InvoiceNumber");

                            b1.ToTable("Invoices");

                            b1.HasAnnotation("Relational:JsonPropertyName", "customer");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceNumber");
                        });

                    b.OwnsOne("InvoicePayment", "InvoicePayment", b1 =>
                        {
                            b1.Property<int>("InvoiceNumber")
                                .HasColumnType("INTEGER");

                            b1.Property<DateTime?>("PaymentDate")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PaymentMethod")
                                .HasColumnType("TEXT");

                            b1.HasKey("InvoiceNumber");

                            b1.ToTable("Invoices");

                            b1.HasAnnotation("Relational:JsonPropertyName", "invoice_payment");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceNumber");
                        });

                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("InvoiceCreditNote");

                    b.Navigation("InvoiceDetail");

                    b.Navigation("InvoicePayment")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
